<UserControl x:Class="Oms.Client.Modules.OrderBlotter.OrderBlotterView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
      xmlns:cal="http://www.caliburnproject.org"
      xmlns:selectors="clr-namespace:Oms.Client.Framework.Selectors"
      xmlns:behaviors="clr-namespace:Oms.Client.Framework.Behaviors"
      xmlns:controls="clr-namespace:Oms.Client.Framework.Controls"
      xmlns:headerPersister="clr-namespace:Oms.Client.Framework.Controls.HeaderPersister"
      xmlns:converters="clr-namespace:Oms.Client.Framework.Converters"
      xmlns:model="clr-namespace:Oms.Client.Model"
      mc:Ignorable="d" 
>
    <UserControl.Resources>
        <!--<CollectionViewSource Source="{Binding OrderAdapters}" x:Key="cvs" >
        <CollectionViewSource.SortDescriptions>
            <componentModel:SortDescription PropertyName="Id"/>
        </CollectionViewSource.SortDescriptions>
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="GroupId"/>
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>-->
        
        <Style TargetType="Expander" x:Key="ExpanderRowGroupStyle">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <DockPanel>
                                <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" 
                                              DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" 
                                              FontStyle="{TemplateBinding FontStyle}" 
                                              FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" 
                                              FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                              MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" BorderThickness="0"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                                  Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Right">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Up">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Left">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <selectors:ItemGroupStyleSelector x:Key="GroupStyleSelector">
        <selectors:ItemGroupStyleSelector.OrphanStyle>
            <Style TargetType="{x:Type GroupItem}">
                <Setter Property="Margin" Value="0 0 0 0"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GroupItem}">
                            <ItemsPresenter Margin="0 0 0 0"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </selectors:ItemGroupStyleSelector.OrphanStyle>
        <selectors:ItemGroupStyleSelector.GroupStyle>
            <Style TargetType="{x:Type GroupItem}">
                <Setter Property="Margin" Value="0 0 0 0"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                <Expander Style="{StaticResource ExpanderRowGroupStyle}">
                                    <Expander.Header>
                                        <Border Background="#E6E6E6">
                                            <GridViewRowPresenter  x:Name="PART_Header"
                                                Columns="{Binding Columns, ElementName=MyGridView, Mode=OneWay}"
                                                Content="{Binding Items, Converter={StaticResource OrderAdapterSummaryConverter}, Mode=OneWay}">
                                                <GridViewRowPresenter.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="Disband Group">
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="Click">
                                                                    <cal:ActionMessage MethodName="UnGroupOrders" cal:Action.TargetWithoutContext="{Binding PlacementTarget.DataContext}">
                                                                        <cal:Parameter Value="{Binding PlacementTarget.SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Mode=OneWay}" />
                                                                    </cal:ActionMessage>
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </MenuItem>
                                                    </ContextMenu>
                                                </GridViewRowPresenter.ContextMenu>
                                            </GridViewRowPresenter>
                                        </Border>
                                </Expander.Header>
                                    <ItemsPresenter Margin="0 0 0 0" x:Name="ItemsPresenter"/>
                            </Expander>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </selectors:ItemGroupStyleSelector.GroupStyle>
    </selectors:ItemGroupStyleSelector>

        
        
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="40"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        
        <TextBlock Grid.Column="0" Grid.Row="0" Text="Filter"/>
        <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding FilterText}"/>
        
    <ListView x:Name="MyListView" Grid.Row="1" Grid.ColumnSpan="2"
            ItemsSource="{Binding Source=OrderViewSource}"
            VirtualizingPanel.IsVirtualizing="True"
            VirtualizingPanel.IsVirtualizingWhenGrouping="True"
            VirtualizingPanel.VirtualizationMode="Standard"
            VirtualizingPanel.CacheLengthUnit="Page"
            headerPersister:HeaderPersister.IsEnabled="True"
            
            VirtualizingPanel.CacheLength="2">
        <headerPersister:HeaderPersister.HeaderTemplate>
            <DataTemplate>
                <Border Background="#E6E6E6">
                    <GridViewRowPresenter 
                        Columns="{Binding Columns, ElementName=MyGridView, Mode=OneWay}"
                        Content="{Binding Items, Converter={StaticResource OrderAdapterSummaryConverter}, Mode=OneWay}">
                    
                </GridViewRowPresenter>
                    </Border>
            </DataTemplate>
        </headerPersister:HeaderPersister.HeaderTemplate>
        <i:Interaction.Behaviors>
            <behaviors:SortingBehavior/>
        </i:Interaction.Behaviors>
        
        <ListView.View>
            <GridView x:Name="MyGridView" >
                <GridViewColumn Header="Id" DisplayMemberBinding="{Binding Id}" />
                <GridViewColumn Header="Price" DisplayMemberBinding="{Binding Price}" />
                <GridViewColumn Header="Quantity" DisplayMemberBinding="{Binding Quantity}" />
                <GridViewColumn Header="GroupId" DisplayMemberBinding="{Binding GroupId}" />
            </GridView>
        </ListView.View>
        <ListView.GroupStyle>
            <GroupStyle ContainerStyleSelector="{StaticResource GroupStyleSelector}"/>
        </ListView.GroupStyle>
        <ListView.ContextMenu>
            <ContextMenu >
                <MenuItem Header="Group">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <cal:ActionMessage MethodName="GroupOrders">
                                <cal:Parameter Value="{Binding PlacementTarget.SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Mode=OneWay}" />
                            </cal:ActionMessage>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <MenuItem Header="UnGroup">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <cal:ActionMessage MethodName="UnGroupOrders">
                                <cal:Parameter Value="{Binding PlacementTarget.SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Mode=OneWay}" />
                            </cal:ActionMessage>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
            </ContextMenu>
        </ListView.ContextMenu>
    </ListView>
    </Grid>
</UserControl>
