//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Oms.Client.PO {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PO.IOrderServiceContract", CallbackContract=typeof(Oms.Client.PO.IOrderServiceContractCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IOrderServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderServiceContract/GetOrders", ReplyAction="http://tempuri.org/IOrderServiceContract/GetOrdersResponse")]
        Oms.Transport.Contracts.Dto.OrderDto[] GetOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderServiceContract/GetOrders", ReplyAction="http://tempuri.org/IOrderServiceContract/GetOrdersResponse")]
        System.Threading.Tasks.Task<Oms.Transport.Contracts.Dto.OrderDto[]> GetOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderServiceContract/CreateOrders", ReplyAction="http://tempuri.org/IOrderServiceContract/CreateOrdersResponse")]
        void CreateOrders(Oms.Transport.Contracts.Dto.OrderDto[] orderDtoList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderServiceContract/CreateOrders", ReplyAction="http://tempuri.org/IOrderServiceContract/CreateOrdersResponse")]
        System.Threading.Tasks.Task CreateOrdersAsync(Oms.Transport.Contracts.Dto.OrderDto[] orderDtoList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderServiceContract/CancelOrders", ReplyAction="http://tempuri.org/IOrderServiceContract/CancelOrdersResponse")]
        void CancelOrders(int[] orderIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderServiceContract/CancelOrders", ReplyAction="http://tempuri.org/IOrderServiceContract/CancelOrdersResponse")]
        System.Threading.Tasks.Task CancelOrdersAsync(int[] orderIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderServiceContract/UpdateOrders", ReplyAction="http://tempuri.org/IOrderServiceContract/UpdateOrdersResponse")]
        void UpdateOrders(Oms.Transport.Contracts.Dto.OrderDto[] orderDtoList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderServiceContract/UpdateOrders", ReplyAction="http://tempuri.org/IOrderServiceContract/UpdateOrdersResponse")]
        System.Threading.Tasks.Task UpdateOrdersAsync(Oms.Transport.Contracts.Dto.OrderDto[] orderDtoList);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOrderServiceContract/SubscribeToEvents")]
        void SubscribeToEvents();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOrderServiceContract/SubscribeToEvents")]
        System.Threading.Tasks.Task SubscribeToEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOrderServiceContract/UnsubscribeToEvents")]
        void UnsubscribeToEvents();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOrderServiceContract/UnsubscribeToEvents")]
        System.Threading.Tasks.Task UnsubscribeToEventsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderServiceContractCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderServiceContract/OrderListUpdated", ReplyAction="http://tempuri.org/IOrderServiceContract/OrderListUpdatedResponse")]
        void OrderListUpdated(Oms.Transport.Contracts.ItemOperationType operationType, Oms.Transport.Contracts.Dto.OrderDto[] orderDtoList);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderServiceContractChannel : Oms.Client.PO.IOrderServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderServiceContractClient : System.ServiceModel.DuplexClientBase<Oms.Client.PO.IOrderServiceContract>, Oms.Client.PO.IOrderServiceContract {
        
        public OrderServiceContractClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public OrderServiceContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public OrderServiceContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceContractClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public Oms.Transport.Contracts.Dto.OrderDto[] GetOrders() {
            return base.Channel.GetOrders();
        }
        
        public System.Threading.Tasks.Task<Oms.Transport.Contracts.Dto.OrderDto[]> GetOrdersAsync() {
            return base.Channel.GetOrdersAsync();
        }
        
        public void CreateOrders(Oms.Transport.Contracts.Dto.OrderDto[] orderDtoList) {
            base.Channel.CreateOrders(orderDtoList);
        }
        
        public System.Threading.Tasks.Task CreateOrdersAsync(Oms.Transport.Contracts.Dto.OrderDto[] orderDtoList) {
            return base.Channel.CreateOrdersAsync(orderDtoList);
        }
        
        public void CancelOrders(int[] orderIdList) {
            base.Channel.CancelOrders(orderIdList);
        }
        
        public System.Threading.Tasks.Task CancelOrdersAsync(int[] orderIdList) {
            return base.Channel.CancelOrdersAsync(orderIdList);
        }
        
        public void UpdateOrders(Oms.Transport.Contracts.Dto.OrderDto[] orderDtoList) {
            base.Channel.UpdateOrders(orderDtoList);
        }
        
        public System.Threading.Tasks.Task UpdateOrdersAsync(Oms.Transport.Contracts.Dto.OrderDto[] orderDtoList) {
            return base.Channel.UpdateOrdersAsync(orderDtoList);
        }
        
        public void SubscribeToEvents() {
            base.Channel.SubscribeToEvents();
        }
        
        public System.Threading.Tasks.Task SubscribeToEventsAsync() {
            return base.Channel.SubscribeToEventsAsync();
        }
        
        public void UnsubscribeToEvents() {
            base.Channel.UnsubscribeToEvents();
        }
        
        public System.Threading.Tasks.Task UnsubscribeToEventsAsync() {
            return base.Channel.UnsubscribeToEventsAsync();
        }
    }
}
