//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Oms.Client.Proxy {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Proxy.IOrderServiceContract", CallbackContract=typeof(Oms.Client.Proxy.IOrderServiceContractCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IOrderServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderServiceContract/GetOrders", ReplyAction="http://tempuri.org/IOrderServiceContract/GetOrdersResponse")]
        Oms.Transport.Contracts.Dto.OrderDto[] GetOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderServiceContract/GetOrders", ReplyAction="http://tempuri.org/IOrderServiceContract/GetOrdersResponse")]
        System.Threading.Tasks.Task<Oms.Transport.Contracts.Dto.OrderDto[]> GetOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderServiceContract/CreateOrder", ReplyAction="http://tempuri.org/IOrderServiceContract/CreateOrderResponse")]
        void CreateOrder(Oms.Transport.Contracts.Dto.OrderDto order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderServiceContract/CreateOrder", ReplyAction="http://tempuri.org/IOrderServiceContract/CreateOrderResponse")]
        System.Threading.Tasks.Task CreateOrderAsync(Oms.Transport.Contracts.Dto.OrderDto order);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOrderServiceContract/SubscribeOrders")]
        void SubscribeOrders();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOrderServiceContract/SubscribeOrders")]
        System.Threading.Tasks.Task SubscribeOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOrderServiceContract/UnsubcribeOrders")]
        void UnsubcribeOrders();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOrderServiceContract/UnsubcribeOrders")]
        System.Threading.Tasks.Task UnsubcribeOrdersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderServiceContractCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderServiceContract/Orders_OnNext", ReplyAction="http://tempuri.org/IOrderServiceContract/Orders_OnNextResponse")]
        void Orders_OnNext(Oms.Transport.Contracts.Dto.OrderDto orderDto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderServiceContractChannel : Oms.Client.Proxy.IOrderServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderServiceContractClient : System.ServiceModel.DuplexClientBase<Oms.Client.Proxy.IOrderServiceContract>, Oms.Client.Proxy.IOrderServiceContract {
        
        public OrderServiceContractClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public OrderServiceContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public OrderServiceContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceContractClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public Oms.Transport.Contracts.Dto.OrderDto[] GetOrders() {
            return base.Channel.GetOrders();
        }
        
        public System.Threading.Tasks.Task<Oms.Transport.Contracts.Dto.OrderDto[]> GetOrdersAsync() {
            return base.Channel.GetOrdersAsync();
        }
        
        public void CreateOrder(Oms.Transport.Contracts.Dto.OrderDto order) {
            base.Channel.CreateOrder(order);
        }
        
        public System.Threading.Tasks.Task CreateOrderAsync(Oms.Transport.Contracts.Dto.OrderDto order) {
            return base.Channel.CreateOrderAsync(order);
        }
        
        public void SubscribeOrders() {
            base.Channel.SubscribeOrders();
        }
        
        public System.Threading.Tasks.Task SubscribeOrdersAsync() {
            return base.Channel.SubscribeOrdersAsync();
        }
        
        public void UnsubcribeOrders() {
            base.Channel.UnsubcribeOrders();
        }
        
        public System.Threading.Tasks.Task UnsubcribeOrdersAsync() {
            return base.Channel.UnsubcribeOrdersAsync();
        }
    }
}
